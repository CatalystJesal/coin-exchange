{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/AppHeader/logo.svg","components/AppHeader/AppHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","id","Table","table","CoinList","coinData","map","key","Section","section","Button","button","AccountBalance","buttonText","amount","handleShowBalance","AppLogo","img","Title","h1","Header","header","AppHeader","src","logo","alt","Component","AppDiv","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","useEffect","length","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","promises","Promise","all","coinPriceData","symbol","quotes","USD","console","log","coin_id","url","coinResponse","newPrice","newCoinData","values","newValues","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAKA,IAAMA,EAAKC,IAAOC,GAAV,KAKO,SAASC,EAAKC,GASrB,OACA,+BACI,cAACJ,EAAD,UAAKI,EAAMC,OACX,cAACL,EAAD,UAAKI,EAAME,SACX,eAACN,EAAD,eAAMI,EAAMG,SACXH,EAAMI,YAAc,cAACR,EAAD,UAAKI,EAAMK,UAAgB,KAChD,cAACT,EAAD,UACI,sBAAMU,OAAO,IAAIC,OAAO,OAAxB,SACA,wBAAQC,QAfA,SAACC,GACjBA,EAAMC,iBAENV,EAAMW,cAAcX,EAAMY,KAYlB,4B,iJCvBhB,IAAMC,EAAQhB,IAAOiB,MAAV,KAMI,SAASC,EAASf,GAEzB,OACA,eAACa,EAAD,WACI,gCACE,+BACE,sCACA,wCACA,uCACCb,EAAMI,YAAc,yCAAmB,KACxC,8CAGN,gCACGJ,EAAMgB,SAASC,KAAI,YAAyC,IAAvCC,EAAsC,EAAtCA,IAAKjB,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,QAC/C,OAAO,cAACN,EAAD,CAAgBa,GAAIM,EAAKP,cAAeX,EAAMW,cAAeP,YAAaJ,EAAMI,YAAaH,KAAMA,EAAMC,OAAQA,EAAQG,QAASA,EAASF,MAAOA,GAAvIe,W,6XCrB/B,IAAMC,EAAUtB,IAAOuB,QAAV,KAMPC,EAASxB,IAAOyB,OAAV,KAWG,SAASC,EAAevB,GAGnC,IAMUwB,EAAaxB,EAAMI,YAAc,eAAiB,eACxD,OACC,eAACe,EAAD,WAAUnB,EAAMI,YAAN,oBAAiCJ,EAAMyB,QAAW,KAC5D,cAACJ,EAAD,CAAQb,QATO,SAACC,GACbA,EAAMC,iBAENV,EAAM0B,kBAAkB1B,EAAMI,cAMjC,SAA+BoB,O,oCCjCzB,MAA0B,iC,qaCIzC,IAAMG,EAAU9B,IAAO+B,IAAV,KAKPC,EAAQhC,IAAOiC,GAAV,KAILC,EAASlC,IAAOmC,OAAV,KAUSC,E,uKAEb,OACI,eAACF,EAAD,WACA,cAACJ,EAAD,CAASO,IAAKC,EAAMC,IAAI,eACxB,cAACP,EAAD,mC,GAL2BQ,a,iKCfvC,IAAMC,EAASzC,IAAO0C,IAAV,KAONC,EAAc,SAAArC,GAAK,OAAIsC,WAAWC,OAAOvC,GAAOwC,QAAQ,KA2E/CC,MAzEf,SAAa5C,GAAQ,IAAD,EAGY6C,mBAAS,KAHrB,mBAGXxC,EAHW,aAIoBwC,oBAAS,IAJ7B,mBAIXzC,EAJW,KAIE0C,EAJF,OAKcD,mBAAS,IALvB,mBAKX7B,EALW,KAKD+B,EALC,KAOlBC,qBAAU,WACa,IAApBhC,EAASiC,QACVC,OAOF,IAAMA,EAAiB,uCAAG,oCAAAC,EAAA,sEACDC,IAAMC,IAAI,wCADT,cAClBC,EADkB,OAElBC,EAAUD,EAASE,KAAKC,MAAM,EArBrB,IAqBoCxC,KAAI,SAAAyC,GAAI,OAAIA,EAAK9C,MAClD,0CACZ+C,EAAWJ,EAAQtC,KAAI,SAAAL,GAAE,OAAIwC,IAAMC,IADvB,0CACuCzC,MAJjC,SAKDgD,QAAQC,IAAIF,GALX,OAKlB3C,EALkB,OAMlB8C,EAAgB9C,EAASC,KAAI,SAASqC,GAC1C,IAAMI,EAAOJ,EAASE,KACtB,MAAO,CACLtC,IAAKwC,EAAK9C,GACVX,KAAMyD,EAAKzD,KACXC,OAAQwD,EAAKK,OACb1D,QAAS,EACTF,MAAOqC,EAAYkB,EAAKM,OAAOC,IAAI9D,WAIvC4C,EAAYe,GACZI,QAAQC,IAAI,sBAlBY,4CAAH,qDAqBjBxD,EAAa,uCAAG,WAAOyD,GAAP,uBAAAjB,EAAA,6DACdkB,EADc,iDACkCD,GADlC,SAEGhB,IAAMC,IAAIgB,GAFb,OAEdf,EAFc,OAGdgB,EAAehB,EAASE,KACxBe,EAAW/B,EAAY8B,EAAaN,OAAOC,IAAI9D,OAE/CqE,EAAcxD,EAASC,KAAI,SAAAwD,GAC/B,IAAIC,EAAS,eAAOD,GAIpB,OAHGL,IAAYM,EAAUxD,MACvBwD,EAAUvE,MAAQoE,GAEbG,KAGT3B,EAAYyB,GAdQ,2CAAH,sDAyBjB,OACE,eAAClC,EAAD,WACE,cAAC,EAAD,IACA,cAACf,EAAD,CAAgBE,OAAQpB,EAASD,YAAaA,EAAasB,kBAVvC,SAACiD,GAGzB7B,GAFe6B,MAUX,cAAC5D,EAAD,CAAUC,SAAUA,EAAUL,cAAeA,EAAeP,YAAaA,QCvElEwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fa9a2ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Td = styled.td`\r\nborder: 1px solid #cccccc;\r\nwidth: 25vh;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n    const handleClick = (event) =>{\r\n        event.preventDefault();\r\n\r\n        props.handleRefresh(props.id);\r\n\r\n    }\r\n\r\n        return (\r\n        <tr>\r\n            <Td>{props.name}</Td>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            {props.showBalance ? <Td>{props.balance}</Td> : null}\r\n            <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                <button onClick={handleClick}>Refresh</button>\r\n                </form>\r\n            </Td>\r\n        </tr>\r\n        )\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}\r\n\r\n","import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\nmargin: 50px auto 50px auto;\r\ndisplay: inline-block;\r\nfont-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n\r\n        return (\r\n        <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Price</th>\r\n                {props.showBalance ? <th>Balance</th> : null}\r\n                <th>Actions</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.coinData.map(({key, name, ticker, price, balance}) =>{\r\n             return <Coin key={key} id={key} handleRefresh={props.handleRefresh} showBalance={props.showBalance} name={name} ticker={ticker} balance={balance} price={price}></Coin>\r\n            })\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\nfont-size: 2rem;\r\ntext-align: left;\r\npadding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\ndisplay: inline-block;\r\npadding: 0.5em 1em;\r\nmargin-left: 1.5em;\r\nvertical-align: middle;\r\nbackground-color: #4169E1;\r\nborder-radius: 30px;\r\nborder: 2px;\r\ncolor: white;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n\r\n\r\n    const handleClick = (event) => {\r\n            event.preventDefault();\r\n\r\n            props.handleShowBalance(props.showBalance);\r\n    }\r\n\r\n        const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n        return (\r\n         <Section>{props.showBalance ? `Balance: $${props.amount}` : null}\r\n         <Button onClick={handleClick}>{buttonText}</Button>\r\n         </Section> \r\n        );\r\n\r\n}\r\n\r\n\r\n\r\nAccountBalance.propTypes = {\r\namount: PropTypes.number.isRequired\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst AppLogo = styled.img`\r\nheight: 8rem;\r\npointer-events: none;\r\n`;\r\n\r\nconst Title = styled.h1`\r\nfont-size: 4rem;\r\n`;\r\n\r\nconst Header = styled.header`\r\nbackground-color: #282c34;\r\nmin-height: 20vh;\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\njustify-content: flex-start;\r\ncolor: white;\r\n`;\r\n\r\nexport default class AppHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n            <AppLogo src={logo} alt=\"React logo\"></AppLogo>\r\n            <Title>Coin Exchange</Title>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport AppHeader from './components/AppHeader/AppHeader';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst AppDiv = styled.div`\r\ntext-align: center;\r\nbackground-color: rgb(12, 48, 88);\r\ncolor: #cccccc;\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nfunction App(props) {\r\n\r\n\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(true);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  useEffect(function(){\r\n  if(coinData.length === 0){\r\n    componentDidMount();\r\n  }\r\n  });\r\n\r\n\r\n  //The code inside here can still go inside useEffect thanks to latest React change which\r\n  //allows useEffect to fire an async function\r\n  const componentDidMount = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\r\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(id => axios.get(tickerUrl + id))\r\n    const coinData = await Promise.all(promises);\r\n    const coinPriceData = coinData.map(function(response){\r\n      const coin = response.data;\r\n      return {\r\n        key: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: formatPrice(coin.quotes.USD.price)\r\n      }\r\n    })\r\n    //Retrieve the prices\r\n    setCoinData(coinPriceData);\r\n    console.log(\"Component mounted!\");\r\n  }\r\n\r\n  const handleRefresh = async (coin_id) => {\r\n    const url = `https://api.coinpaprika.com/v1/tickers/${coin_id}`;\r\n    const response = await axios.get(url);\r\n    const coinResponse = response.data;\r\n    const newPrice = formatPrice(coinResponse.quotes.USD.price);\r\n\r\n    const newCoinData = coinData.map(values => {\r\n      let newValues = {...values};\r\n      if(coin_id === newValues.key){\r\n        newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n    })\r\n  \r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n\r\n  const handleShowBalance = (state) => {\r\n    let newState = state ? false : true;\r\n\r\n    setShowBalance(newState);\r\n\r\n  }\r\n\r\n    return (\r\n      <AppDiv>\r\n        <AppHeader></AppHeader>\r\n        <AccountBalance amount={balance} showBalance={showBalance} handleShowBalance={handleShowBalance}/>\r\n        <CoinList coinData={coinData} handleRefresh={handleRefresh} showBalance={showBalance}></CoinList>\r\n      </AppDiv>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}