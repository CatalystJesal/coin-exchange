{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/AppHeader/logo.svg","components/AppHeader/AppHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Button","button","Coin","props","className","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleAPIActions","id","Table","table","THead","thead","CoinList","coinData","map","key","Section","section","ImgButton","Balance","div","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","balanceBtnStyle","balanceVal","format","amount","handleShowBalance","handleAddBalance","AppLogo","img","Title","h1","Header","header","AppHeader","src","logo","alt","Component","AppDiv","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","useEffect","length","componentDidMount","a","axios","get","catch","error","console","log","response","data","sort","b","rank","slice","coinPriceData","values","coin","symbol","quotes","USD","coin_id","isBuy","isSell","url","coinResponse","newPrice","newCoinData","newValues","handleBuy","handleSell","alert","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ulBAKA,IAAMA,EAAKC,IAAOC,GAAV,KAMFC,EAASF,IAAOG,OAAV,KASG,SAASC,EAAKC,GAqBrB,OACA,qBAAIC,UAAU,aAAd,UACI,cAACP,EAAD,UAAKM,EAAME,OACX,cAACR,EAAD,UAAKM,EAAMG,SACX,eAACT,EAAD,eAAMM,EAAMI,SACZ,cAACV,EAAD,UAAKM,EAAMK,YAAcL,EAAMM,QAAU,MACzC,cAACZ,EAAD,UACI,uBAAMa,OAAO,IAAIC,OAAO,OAAxB,UACA,cAACX,EAAD,CAAQI,UAAU,eAAeQ,QA3BlB,SAACC,GACxBA,EAAMC,iBAENX,EAAMY,iBAAiBZ,EAAMa,IAAI,GAAO,IAwBhC,qBACA,cAAChB,EAAD,CAAQI,UAAU,kBAAkBQ,QArBzB,SAACC,GACpBA,EAAMC,iBAENX,EAAMY,iBAAiBZ,EAAMa,IAAI,GAAM,IAkB/B,iBACA,cAAChB,EAAD,CAAQI,UAAU,iBAAiBQ,QAhBvB,SAACC,GACrBA,EAAMC,iBAENX,EAAMY,iBAAiBZ,EAAMa,IAAI,GAAO,IAahC,0B,2OC/ChB,IAAMC,EAAQnB,IAAOoB,MAAV,KAMLC,EAAQrB,IAAOsB,MAAV,KAKI,SAASC,EAASlB,GAEzB,OACA,eAACc,EAAD,WACI,cAACE,EAAD,UACE,+BACE,sCACA,wCACA,uCACA,yCACA,8CAGN,gCACGhB,EAAMmB,SAASC,KAAI,YAAyC,IAAvCC,EAAsC,EAAtCA,IAAKnB,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,QAC/C,OAAO,cAACP,EAAD,CAAgBc,GAAIQ,EAAKT,iBAAkBZ,EAAMY,iBAAkBP,YAAaL,EAAMK,YAAaH,KAAMA,EAAMC,OAAQA,EAAQG,QAASA,EAASF,MAAOA,GAA7IiB,W,4jBC1B/B,IAAMC,EAAU3B,IAAO4B,QAAV,KAQP1B,EAASF,IAAOG,OAAV,KAON0B,EAAY7B,IAAOG,OAAV,KAMT2B,EAAU9B,IAAO+B,IAAV,KAMTC,EAAYC,KAAKC,aAAa,QAAS,CACvCC,MAAO,WACPC,SAAU,QAIC,SAASC,EAAehC,GAEnC,IAAMiC,EAAajC,EAAMK,YAAc,eAAiB,eAEpD6B,EAAkBlC,EAAMK,YAAc,kBAAoB,eAE1D8B,EAAa,OACdnC,EAAMK,cACR8B,EAAa,mCAAGR,EAAUS,OAAOpC,EAAMqC,WAepC,OACA,qCACC,cAACZ,EAAD,UAAUU,IACV,eAACb,EAAD,WACA,cAAC,EAAD,CAAQrB,UAAWiC,EAAiBzB,QAhBV,SAACC,GACxBA,EAAMC,iBAENX,EAAMsC,kBAAkBtC,EAAMK,cAajC,SAAsE4B,IACtE,cAACT,EAAD,CAAWvB,UAAU,iBAAiBQ,QAXb,SAACC,GAC3BA,EAAMC,iBACNX,EAAMuC,oBASL,SAEA,mBAAGtC,UAAU,8B,oCCnEP,MAA0B,iC,oaCIzC,IAAMuC,EAAU7C,IAAO8C,IAAV,KAKPC,EAAQ/C,IAAOgD,GAAV,KAILC,EAASjD,IAAOkD,OAAV,KAUSC,E,uKAEb,OACI,eAACF,EAAD,WACA,cAACJ,EAAD,CAASO,IAAKC,EAAMC,IAAI,eACxB,cAACP,EAAD,mC,GAL2BQ,a,iLCbvC,IAAMC,EAASxD,IAAO+B,IAAV,KAON0B,EAAc,SAAAhD,GAAK,OAAIiD,WAAWC,OAAOlD,GAAOmD,QAAQ,KAsI/CC,MAlIf,SAAaxD,GAAQ,IAAD,EAEYyD,mBAAS,KAFrB,mBAEXnD,EAFW,KAEFoD,EAFE,OAGoBD,oBAAS,GAH7B,mBAGXpD,EAHW,KAGEsD,EAHF,OAIcF,mBAAS,IAJvB,mBAIXtC,EAJW,KAIDyC,EAJC,KAMlBC,qBAAU,WACa,IAApB1C,EAAS2C,QACVC,OAOF,IAAMA,EAAiB,uCAAG,kCAAAC,EAAA,sEACDC,IAAMC,IAAI,2CAA2CC,OAAM,SAASC,GACzFC,QAAQC,IAAIF,MAFU,OAClBG,EADkB,OAKlBC,EAAOD,EAASC,KAEhBrD,EAAWqD,EAAKC,MAAK,SAACT,EAAGU,GAE7B,OAAGV,EAAEW,KAAOD,EAAEC,KACL,GAEC,KAETC,MAAM,EAlCM,IAoCTC,EAAgB1D,EAASC,KAAK,SAAA0D,GAClC,IAAMC,EAAI,eAAOD,GACjB,MAAO,CACLzD,IAAK0D,EAAKlE,GACVX,KAAM6E,EAAK7E,KACXC,OAAQ4E,EAAKC,OACb1E,QAAS,EACTF,MAAOgD,EAAY2B,EAAKE,OAAOC,IAAI9E,WAIvCwD,EAAYiB,GA3BY,2CAAH,qDA+BjBjE,EAAgB,uCAAG,WAAOuE,EAASC,EAAOC,GAAvB,uBAAArB,EAAA,6DACjBsB,EADiB,iDAC+BH,GAD/B,SAEAlB,IAAMC,IAAIoB,GAAKnB,OAAM,SAASC,GACnDC,QAAQC,IAAIF,MAHS,OAEjBG,EAFiB,OAKjBgB,EAAehB,EAASC,KACxBgB,EAAWpC,EAAYmC,EAAaN,OAAOC,IAAI9E,OAE/CqF,EAActE,EAASC,KAAI,SAAA0D,GAC/B,IAAIY,EAAS,eAAOZ,GAIpB,OAHGK,IAAYO,EAAUrE,MACvBqE,EAAUtF,MAAQoF,GAEbE,KAGT9B,EAAY6B,GAETL,GAAQO,EAAUR,EAASK,GAC3BH,GAASO,EAAWT,EAASK,GAnBT,4CAAH,0DAuBhBG,EAAY,SAACR,EAAS/E,GAE1B,IAAMqF,EAActE,EAASC,KAAI,SAAA0D,GACjC,IAAIY,EAAS,eAAOZ,GAalB,OAXCK,IAAYO,EAAUrE,MAEpBf,GAAWF,GACZsF,EAAUtF,MAAQA,EAClBsF,EAAUpF,SAAW,EACrBoD,EAAWpD,EAAQF,IAEnByF,MAAM,uBAIDH,KAGT9B,EAAY6B,IAIRG,EAAa,SAACT,EAAS/E,GAE3B,IAAMqF,EAActE,EAASC,KAAI,SAAA0D,GACjC,IAAIY,EAAS,eAAOZ,GAOlB,OALCK,IAAYO,EAAUrE,KAAOqE,EAAUpF,QAAU,IAChDoF,EAAUtF,MAAQA,EAClBsF,EAAUpF,SAAW,EACrBoD,EAAWpD,EAAQF,IAEdsF,KAGT9B,EAAY6B,IAcZ,OACE,eAACtC,EAAD,WACE,cAAC,EAAD,IACA,cAACnB,EAAD,CAAgBK,OAAQ/B,EAASD,YAAaA,EAAaiC,kBAbvC,SAACwD,GAEzBnC,GADemC,IAYsFvD,iBAR9E,WAEvBmB,EADiBpD,EArHQ,SA6HrB,cAACY,EAAD,CAAUC,SAAUA,EAAUP,iBAAkBA,EAAkBP,YAAaA,QCpIxE0F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0adbd19.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Td = styled.td`\r\nborder-left: 2px solid #cccccc;\r\nborder-right: 2px solid #cccccc;\r\nwidth: 25vh;\r\n`;\r\n\r\nconst Button = styled.button`\r\nborder-radius: 30px;\r\nborder: 2px;\r\nmargin: 5px;\r\ncolor: black;\r\nfont-weight: bold;\r\n// padding: 0.3rem 0.3rem 0.3rem 0.3rem;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n\r\n    const handleRefreshClick = (event) =>{\r\n        event.preventDefault();\r\n\r\n        props.handleAPIActions(props.id, false, false);\r\n\r\n    }\r\n\r\n    const handleBuyClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.handleAPIActions(props.id, true, false);\r\n    }\r\n\r\n    const handleSellClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.handleAPIActions(props.id, false, true);\r\n    }\r\n\r\n        return (\r\n        <tr className=\"table-type\">\r\n            <Td>{props.name}</Td>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            <Td>{props.showBalance ? props.balance : '-'}</Td>\r\n            <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                <Button className=\"btn btn-info\" onClick={handleRefreshClick}>Refresh</Button>\r\n                <Button className=\"btn btn-success\" onClick={handleBuyClick}>Buy</Button>\r\n                <Button className=\"btn btn-danger\" onClick={handleSellClick}>Sell</Button>\r\n                </form>\r\n            </Td>\r\n        </tr>\r\n        )\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}\r\n\r\n","import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\nmargin: 50px auto 100% auto;\r\ndisplay: inline-block;\r\nfont-size: 1.4rem;\r\n`;\r\n\r\nconst THead = styled.thead`\r\nmargin-top: 10px;\r\n`;\r\n\r\n\r\nexport default function CoinList(props) {\r\n\r\n        return (\r\n        <Table>\r\n            <THead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Price</th>\r\n                <th>Balance</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n          </THead>\r\n          <tbody>\r\n            {props.coinData.map(({key, name, ticker, price, balance}) =>{\r\n             return <Coin key={key} id={key} handleAPIActions={props.handleAPIActions} showBalance={props.showBalance} name={name} ticker={ticker} balance={balance} price={price}></Coin>\r\n            })\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\nfont-size: 1.2rem;\r\nheight: 8vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\nborder-radius: 30px;\r\nborder: none;\r\ncolor: black;\r\nfont-weight: bold;\r\n`;\r\n\r\nconst ImgButton = styled.button`\r\nborder-radius: 30px;\r\nmargin-left: 1.5em;\r\nwidth: 100px;\r\n`;\r\n\r\nconst Balance = styled.div`\r\ntext-align: center;\r\nfont-size: 1.6em;\r\nmargin-top: 0.5em;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\n\r\nexport default function AccountBalance(props) {\r\n\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n\r\n    let balanceBtnStyle = props.showBalance ? \"btn btn-primary\" : 'btn btn-info';\r\n\r\n    let balanceVal = '\\u00A0';\r\n    if(props.showBalance){\r\n     balanceVal = <>{formatter.format(props.amount)}</>\r\n    }\r\n\r\n    const handleShowBalanceClick = (event) => {\r\n            event.preventDefault();\r\n\r\n            props.handleShowBalance(props.showBalance);\r\n    }\r\n\r\n    const handleAddBalanceClick = (event) => {\r\n        event.preventDefault();\r\n        props.handleAddBalance();\r\n    }\r\n\r\n       \r\n        return (\r\n        <>\r\n         <Balance>{balanceVal}</Balance>   \r\n         <Section>\r\n         <Button className={balanceBtnStyle} onClick={handleShowBalanceClick}>{buttonText}</Button>\r\n         <ImgButton className=\"btn btn-danger\" onClick={handleAddBalanceClick}>\r\n\r\n         <i className=\"fas fa-helicopter\"></i>\r\n         </ImgButton>\r\n         </Section> \r\n         </>\r\n        );\r\n\r\n}\r\n\r\n\r\n\r\nAccountBalance.propTypes = {\r\namount: PropTypes.number.isRequired\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst AppLogo = styled.img`\r\nheight: 8rem;\r\npointer-events: none;\r\n`;\r\n\r\nconst Title = styled.h1`\r\nfont-size: 4rem;\r\n`;\r\n\r\nconst Header = styled.header`\r\nbackground-color: #282c34;\r\nmin-height: 20vh;\r\ndisplay: flex;\r\n// flex-direction: row;\r\nalign-items: center;\r\njustify-content: center;\r\ncolor: white;\r\n`;\r\n\r\nexport default class AppHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n            <AppLogo src={logo} alt=\"React logo\"></AppLogo>\r\n            <Title>Coin Exchange</Title>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport AppHeader from './components/AppHeader/AppHeader';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\nconst AppDiv = styled.div`\r\ntext-align: center;\r\n// background-color: rgb(12, 48, 88);\r\ncolor: #cccccc;\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nconst balanceIncreaseValue = 1200;\r\n\r\nfunction App(props) {\r\n\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(false);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  useEffect(function(){\r\n  if(coinData.length === 0){\r\n    componentDidMount();\r\n  }\r\n  });\r\n\r\n\r\n  //The code inside here can still go inside useEffect thanks to latest React change which\r\n  //allows useEffect to fire an async function\r\n  const componentDidMount = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/tickers/').catch(function(error){\r\n      console.log(error);\r\n    })\r\n\r\n    const data = response.data;\r\n\r\n    const coinData = data.sort((a, b) => \r\n    { \r\n      if(a.rank > b.rank){\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    }).slice(0, COIN_COUNT);\r\n\r\n    const coinPriceData = coinData.map( values => {\r\n      const coin = {...values};\r\n      return {\r\n        key: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: formatPrice(coin.quotes.USD.price)\r\n      }\r\n    })\r\n    //Retrieve the prices\r\n    setCoinData(coinPriceData);\r\n  }\r\n\r\n\r\n  const handleAPIActions = async (coin_id, isBuy, isSell) => {\r\n    const url = `https://api.coinpaprika.com/v1/tickers/${coin_id}`;\r\n    const response = await axios.get(url).catch(function(error){\r\n      console.log(error);\r\n    });\r\n    const coinResponse = response.data;\r\n    const newPrice = formatPrice(coinResponse.quotes.USD.price);\r\n\r\n    const newCoinData = coinData.map(values => {\r\n      let newValues = {...values};\r\n      if(coin_id === newValues.key){\r\n        newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n    })\r\n  \r\n    setCoinData(newCoinData);\r\n\r\n    if(isBuy){ handleBuy(coin_id, newPrice); } \r\n    if(isSell){ handleSell(coin_id, newPrice); }\r\n\r\n    }\r\n\r\n  const handleBuy = (coin_id, price) => {\r\n\r\n    const newCoinData = coinData.map(values =>{\r\n    let newValues = {...values};\r\n    \r\n    if(coin_id === newValues.key){\r\n\r\n      if(balance >= price){\r\n        newValues.price = price;\r\n        newValues.balance += 1;\r\n        setBalance(balance-price);\r\n      } else {\r\n        alert(\"Insufficient funds\")\r\n      }\r\n\r\n    }\r\n      return newValues;\r\n    })\r\n\r\n    setCoinData(newCoinData);\r\n\r\n  }\r\n\r\n  const handleSell = (coin_id, price) => {\r\n\r\n    const newCoinData = coinData.map(values =>{\r\n    let newValues = {...values};\r\n    \r\n    if(coin_id === newValues.key && newValues.balance > 0){\r\n        newValues.price = price;\r\n        newValues.balance -= 1;\r\n        setBalance(balance+price);\r\n    }\r\n      return newValues;\r\n    })\r\n\r\n    setCoinData(newCoinData);\r\n\r\n  }\r\n\r\n  const handleShowBalance = (state) => {\r\n    let newState = state ? false : true;\r\n    setShowBalance(newState);\r\n  }\r\n\r\n  const handleAddBalance = () => {\r\n    let newBalance = balance + balanceIncreaseValue;\r\n    setBalance(newBalance);\r\n  }\r\n\r\n    return (\r\n      <AppDiv>\r\n        <AppHeader></AppHeader>\r\n        <AccountBalance amount={balance} showBalance={showBalance} handleShowBalance={handleShowBalance} handleAddBalance={handleAddBalance}/>\r\n        <CoinList coinData={coinData} handleAPIActions={handleAPIActions} showBalance={showBalance}></CoinList>\r\n      </AppDiv>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}